version: "3"
services:
  db:
    env_file: .env
    image: mysql:latest
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - .docker/volumes/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    expose:
      - "3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} 
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  node:
    env_file: .env
    depends_on:
      - db
    build:
      context: .
      dockerfile: Dockerfile
    command: migrate
    ports:
      - "3000"
    restart: always
    volumes:
      - .:/home/node/app
      - /home/node/app/node_modules
    environment:
      MYSQL_DB_NAME: ${MYSQL_DB_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      # #VIRTUAL_HOST environment variable is used by nginx to asssociate with the container and create 
      # # the entry in /etc/nginx/conf.d/default.conf
      VIRTUAL_HOST: node.local
  nginx-proxy:
    #https://github.com/nginx-proxy/nginx-proxy
    image: nginxproxy/nginx-proxy
    restart: always
    depends_on: 
      - node
    ports:
      - "8080:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      #In order to run on localhost we need to explicitly tell nginx to route to the hosts with x.local
      DEFAULT_HOST: node.local